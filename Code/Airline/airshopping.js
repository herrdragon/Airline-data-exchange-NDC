// airshopping.js

var express    = require('express');
var router     = express.Router();
var builder    = require('xmlbuilder');
const db       = require('./db');

module.exports = router;

router.post('/', async (request, response) => {
    response.set('Content-Type', 'application/xml');
    try {
        let req = request.body;
        let dep = req.Request.FlightCriteria[0].OriginDestCriteria[0].OriginDepCriteria[0].IATALocationCode[0];
        let dest = req.Request.FlightCriteria[0].OriginDestCriteria[0].DestArrivalCriteria[0].IATALocationCode[0];
        let date = req.Request.FlightCriteria[0].OriginDestCriteria[0].OriginDepCriteria[0].Date[0]
        date = new Date(date);
        let day = dayofweek(date);
        let paxId = req.Request.Paxs[0].Pax[0].PaxID[0];
        let ptc = req.Request.Paxs[0].Pax[0].PTC[0];
        let airCode = req.Request.ShoppingCriteria[0].CarrierCriteria[0].Carrier[0].AirlineDesigCode[0];
        let cabinType = req.Request.ShoppingCriteria[0].FlightCriteria[0].CabinType[0].CabinTypeCode[0];
        let r = [dep,dest,day,paxId,ptc,airCode,cabinType];
        
        let flights = await db.pool.query(`SELECT * FROM flight WHERE departs=$1 AND arrives=$2 AND dow LIKE $3`,[dep, dest, '%'+day+'%']);
        let cities = await db.pool.query(`(SELECT * FROM airport WHERE iata_code=$1) union all (SELECT * FROM airport WHERE iata_code=$2)`,[dep, dest]);
        flights = flights.rows;
        cities = cities.rows;
        let data = {flights, cities};
        response.set('Content-Type', 'text/xml');
        response.send(buildresponse(dep, dest));
    } catch(e) {}
});

function dayofweek(date) {
    return date.getDay() == 0 ? 7 : date.getDay()
}

function buildresponse(dep, dest) {
    var xml = builder.create('Response', {encoding: 'utf-8'})
        .ele('DataLists')
            .ele('OriginDestList')
                .ele('OriginDest')
                    .ele('DestCode', dest).up()
                    .ele('OriginCode', dep).up()
                    .ele('OriginDestID', dep+dest).up()
                    .ele('PaxJourneyRefID', 'FL_'+dep+dest).up()
                .up()    
            .up()
            .ele('PaxJourneyList')
				.ele('PaxJourney')
				    .ele('PaxJourneyID', 'FL_'+dep+dest).up()
					.ele('PaxSegmentRefID', 'SEG_'+dep+dest+'1').up()
				.up()
			.up()
            .ele('PaxList')
		    	.ele('Pax')
		    		.ele('PaxID', 'SH1').up()
		    		.ele('PTC', 'ADT').up()
		    	.up()
		    .up()
		    .ele('PaxSegmentList')
		    	.ele('PaxSegment')
		    		.ele('Arrival')
		    			.ele('IATALocationCode', dest).up()
		    		.up()
		    		.ele('Dep')
		    			.ele('IATALocationCod', dep).up()
		    		.up()
		    		.ele('MarketingCarrierInfo')
		    			.ele('CarrierDesigCode', 'XB').up()
		    			.ele('MarketingCarrierFlightNumberText', '070').up()
		    		.up()
		    		.ele('PaxSegmentID', 'SEG_'+dep+dest+'1').up()
		    	.up()
		    .up()
		    .ele('PriceClassList')
		    	.ele('PriceClass')
		    		.ele('Code', 'M-EFO').up()
		    		.ele('FareBasisCode', 'EFO').up()
		    		.ele('Name', 'Economy flex').up()
		    		.ele('PriceClassID', 'PC1').up()
		    	.up()
		    .up()
		    .ele('ServiceDefinitionList')
		    	.ele('ServiceDefinition')
		    		.ele('Desc')
		    			.ele('DescText', 'First Bag').up()
		    		.up()
		    		.ele('Name', '1st Bag').up()
		    		.ele('ServiceCode', 'BAG').up()
		    		.ele('ServiceDefinitionID', 'SV_1012_EFO').up()
		    	.up()
		    	.ele('ServiceDefinition')
		    		.ele('Desc')
		    			.ele('DescText', 'Meal').up()
		    		.up()
		    		.ele('Name', 'Snack').up()
		    		.ele('ServiceCode', 'MEL').up()
		    		.ele('ServiceDefinitionID', 'SV_1014_EFO').up()
		    	.up()
		    	.ele('ServiceDefinition')
		    		.ele('Desc')
		    			.ele('DescText', 'Second Bag').up()
		    		.up()
		    		.ele('Name', '2nd Bag').up()
		    		.ele('ServiceCode', 'BAG').up()
		    		.ele('ServiceDefinitionID', 'SV_1015_EFO').up()
		    	.up()
		    .up()
    	.up()
    	.ele('OffersGroup')
    		.ele('AllOffersSummary')
    			.ele('MatchedOfferQty', '3').up()
    		.up()
    		.ele('CarrierOffers')
    			.ele('ALaCarteOffer')
    				.ele('ALaCarteOfferItem')
    					.ele('Eligibility')
    						.ele('FlightAssociations')
    							.ele('PaxSegmentRefID', 'SEG_'+dep+dest+'1').up()
    						.up()
    						.ele('PaxRefID', 'SH1').up()
    						.ele('PriceClassRefID', 'PC1').up()
    					.up()
    					.ele('OfferItemID', 'OfferItemID1').up()
    					.ele('Service')
    						.ele('ServiceDefinitionRefID', 'SV_1015_EFO').up()
    						.ele('ServiceID', 'SV_1015_1').up()
    					.up()
    					.ele('UnitPrice')
    						.ele('BaseAmount', {'CurCode':"EUR"}, '55.00').up()
    						.ele('TaxSummary')
    							.ele('TotalTaxAmount', {'CurCode':"EUR"}, '0.00').up()
    						.up()
    						.ele('TotalAmount', {'CurCode':"EUR"}, '55.00').up()
    					.up()
    				.up()
    				.ele('OfferID', 'AlaCarteOfferID_1').up()
    				.ele('OwnerCode', 'XB').up()
    			.up()
    			.ele('Offer')
    				.ele('JourneyOverview')
    					.ele('JourneyPriceClass')
    						.ele('PaxJourneyRefID', 'FL_LHRBCN').up()
    						.ele('PriceClassRefID', 'PC1').up()
    					.up()
    				.up()
    				.ele('OfferExpirationDateTime', '2018-08-11T23:29:41.543+03:00').up()
    				.ele('OfferID', 'OFFER1').up()
    				.ele('OfferItem')
    					.ele('OfferItemID', 'OFFERITEM1_1').up()
    					.ele('Price')
    						.ele('BaseAmount', {'CurCode':"EUR"}, '122.00').up()
    						.ele('TaxSummary')
    							.ele('TotalTaxAmount', {'CurCode':"EUR"}, '153.58').up()
    						.up()
    						.ele('TotalAmount', {'CurCode':"EUR"}, '275.58').up()
    					.up()
    					.ele('Service')
    						.ele('PaxRefID', 'SH1').up()
    						.ele('ServiceAssociations')
    							.ele('ServiceDefinitionRef')
    								.ele('PaxSegmentRefID', 'SEG_LHRBCN_1').up()
    								.ele('ServiceDefinitionRefID', 'SV_1012_EFO').up()
    							.up()
    						.up()
    						.ele('ServiceID', 'SV_1012_EFO').up()
    					.up()
    					.ele('Service')
    						.ele('PaxRefID', 'SH1').up()
    						.ele('ServiceAssociations')
    							.ele('ServiceDefinitionRef')
    								.ele('PaxSegmentRefID', 'SEG_LHRBCN_1').up()
    								.ele('ServiceDefinitionRefID', 'SV_1014_EFO').up()
    							.up()
    						.up()
    						.ele('ServiceID', 'SV_1014_EFO').up()
    					.up()
    					.ele('Service')
    						.ele('PaxRefID', 'SH1').up()
    						.ele('ServiceAssociations')
    							.ele('PaxJourneyRefID', 'FL_LHRBCN').up()
    						.up()
    						.ele('ServiceID', 'FL1_1_FL_LHRBCN_1_SH1').up()
    					.up()
    				.up()
    				.ele('OwnerCode', 'XB').up()
    				.ele('TotalPrice')
    					.ele('BaseAmount', {'CurCode':"EUR"}, '122.00').up()
    					.ele('TaxSummary')
    						.ele('TotalTaxAmount', {'CurCode':"EUR"}, '153.58').up()
    					.up()
    					.ele('TotalAmount', {'CurCode':"EUR"}, '275.58').up()
    				.up()
    			.up()
    			.ele('Offer')
    				.ele('JourneyOverview')
    					.ele('JourneyPriceClass')
    						.ele('PaxJourneyRefID', 'FL_LHRBCN').up()
    						.ele('PriceClassRefID', 'PC1').up()
    					.up()
    				.up()
    				.ele('OfferExpirationDateTime', '2018-08-11T23:29:41.543+03:00').up()
    				.ele('OfferID', 'OFFER2').up()
    				.ele('OfferItem')
    					.ele('OfferItemID', 'OFFERITEM2_1').up()
    					.ele('Price')
    						.ele('BaseAmount', {'CurCode':"EUR"}, '122.00').up()
    						.ele('TaxSummary')
    							.ele('TotalTaxAmount', {'CurCode':"EUR"}, '153.58').up()
    						.up()
    						.ele('TotalAmount', {'CurCode':"EUR"}, '275.58').up()
    					.up()
    					.ele('Service')
    						.ele('PaxRefID', 'SH1').up()
    						.ele('ServiceAssociations')
    							.ele('ServiceDefinitionRef')
    								.ele('PaxSegmentRefID', 'SEG_LHRBCN_1').up()
    								.ele('ServiceDefinitionRefID', 'SV_1012_EFO').up()
    							.up()
    						.up()
    						.ele('ServiceID', 'SV_1012_EFO').up()
    					.up()
    					.ele('Service')
    						.ele('PaxRefID', 'SH1').up()
    						.ele('ServiceAssociations')
    							.ele('ServiceDefinitionRef')
    								.ele('PaxSegmentRefID', 'SEG_LHRBCN_1').up()
    								.ele('ServiceDefinitionRefID', 'SV_1014_EFO').up()
    							.up()
    						.up()
    						.ele('ServiceID', 'SV_1014_EFO').up()
    					.up()
    					.ele('Service')
    						.ele('PaxRefID', 'SH1').up()
    						.ele('ServiceAssociations')
    							.ele('PaxJourneyRefID', 'FL_LHRBCN').up()
    						.up()
    						.ele('ServiceID', 'FL2_1_FL_LHRBCN_1_SH1').up()
    					.up()
    				.up()
    				.ele('OwnerCode', 'XB').up()
    				.ele('TotalPrice')
    					.ele('BaseAmount', {'CurCode':"EUR"}, '122.00').up()
    					.ele('TaxSummary')
    						.ele('TotalTaxAmount', {'CurCode':"EUR"}, '153.58').up()
    					.up()
    					.ele('TotalAmount', {'CurCode':"EUR"}, '275.58').up()
    				.up()
    			.up()
    		.up()
    	.up()
    	.ele('ShoppingResponse')
    		.ele('OwnerCode', 'XB').up()
    		.ele('ShoppingResponseID', '201-fffe76f290cc489f98f58bf20061b496').up()
    	.up()
    .end({ pretty: true});
    return xml;
}
